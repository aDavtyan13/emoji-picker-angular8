{"version":3,"file":"emoji-picker-lib.js","sources":["ng://emoji-picker-lib/lib/emoji-picker-lib.service.ts","ng://emoji-picker-lib/lib/@core/services/emojis.shared.ts","ng://emoji-picker-lib/lib/emoji-picker-lib.component.ts","ng://emoji-picker-lib/lib/@theme/directives/outclick.directive.ts","ng://emoji-picker-lib/lib/@theme/directives/autofocus.directive.ts","ng://emoji-picker-lib/lib/emoji-picker-lib.module.ts","ng://emoji-picker-lib/lib/@core/interfaces/data.interface.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\n\nimport {IData} from './@core/interfaces/data.interface';\n\n@Injectable()\nexport class EmojiPickerService {\n  public getEmojis(): Promise<IData> {\n    return fetch('./assets/data/emojis.json').then(result => result.json());\n  }\n}\n","import {Injectable} from '@angular/core';\r\nimport {BehaviorSubject, Observable} from 'rxjs';\r\n\r\nimport {IData, IEmoji} from '../interfaces/data.interface';\r\nimport {EmojiPickerService} from '../../emoji-picker-lib.service';\r\n\r\n@Injectable()\r\nexport class EmojisSharedService {\r\n  private ctx: CanvasRenderingContext2D;\r\n  private emojis: BehaviorSubject<IData> = new BehaviorSubject<IData>({} as IData);\r\n\r\n  public data: Observable<IData> = this.emojis.asObservable();\r\n\r\n  constructor(private emojiPickerService: EmojiPickerService) {\r\n    this.getEmojis();\r\n  }\r\n\r\n  private getEmojis(): void {\r\n    this.emojiPickerService.getEmojis().then((data: IData) => this.emojis.next(data));\r\n  }\r\n\r\n  private isEmoji(item: string): boolean {\r\n    this.ctx.clearRect(0, 0, 4, 4);\r\n    this.ctx.fillText(item, -4, 4);\r\n    return this.ctx.getImageData(0, 0, 1, 1).data[1] > 0;\r\n  }\r\n\r\n  public checkEmojiSupport(data: IData): void {\r\n    if (this.ctx || !data.emojis) {\r\n      return;\r\n    }\r\n    this.ctx = document.createElement('canvas').getContext('2d');\r\n    this.ctx.canvas.width = 1;\r\n    this.ctx.canvas.height = 1;\r\n    data.emojis.forEach((element: IEmoji) => {\r\n      element.isSupported = this.isEmoji(element.emoji);\r\n    });\r\n  }\r\n}\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\n\nimport {EmojisSharedService} from './@core/services/emojis.shared';\nimport {IData, IEmoji, IEmojiPickerOptions, ISelectedCategory} from './@core/interfaces/data.interface';\n\n@Component({\n  selector: 'emoji-picker',\n  templateUrl: './emoji-picker-lib.component.html'\n})\nexport class EmojiPickerLibComponent implements OnInit {\n  constructor(private emojisSharedService: EmojisSharedService) {\n  }\n\n  @Input() emojiPickerOptions: IEmojiPickerOptions;\n\n  @Output() selectEmojiEvent: EventEmitter<string> = new EventEmitter<string>();\n\n  public data: IData;\n  public selectedCategory: ISelectedCategory = {} as ISelectedCategory;\n\n  ngOnInit(): void {\n    this.initData();\n    this.getEmojis();\n  }\n\n  private initData(): void {\n    this.emojiPickerOptions = {\n      emojisPerRow: 9,\n      defaultCatalogId: 0\n    };\n  }\n\n  private getEmojis(): void {\n    this.emojisSharedService.data.subscribe(data => {\n      this.data = data;\n    });\n  }\n\n  private includesSearchValue(element: string): boolean {\n    return element.includes(this.emojiPickerOptions.searchValue.toLowerCase());\n  }\n\n  public showSelectedEmojis(index: number): void {\n    this.selectedCategory.category = this.data.categories[index];\n    this.selectedCategory.emojis = this.data.emojis.filter((emoji: IEmoji) => emoji.categoryId === this.selectedCategory.category.id);\n  }\n\n  public calcEmojiSize(count: number): string {\n    return `${100 / count}%`;\n  }\n\n  public selectEmoji(emoji: string): void {\n    this.selectEmojiEvent.emit(emoji);\n  }\n\n  public toggleEmojiPicker(): void {\n    try {\n      this.emojisSharedService.checkEmojiSupport(this.data);\n      this.showSelectedEmojis(this.emojiPickerOptions.defaultCatalogId);\n      this.emojiPickerOptions.showEmojiPicker = !this.emojiPickerOptions.showEmojiPicker;\n    } catch (error) {\n    }\n  }\n\n  public searchElement(): void {\n    if (this.emojiPickerOptions.searchValue) {\n      this.selectedCategory.emojis = this.data.emojis.filter((emoji: IEmoji) =>\n        emoji.keywords.some((key: string) => this.includesSearchValue(key.toLowerCase())) || this.includesSearchValue(emoji.name)\n      );\n    } else {\n      this.showSelectedEmojis(0);\n    }\n  }\n\n  public closeEmojiPicker(): void {\n    this.emojiPickerOptions.showEmojiPicker = false;\n    this.emojiPickerOptions.searchValue = '';\n  }\n}\n","import {Directive, ElementRef, EventEmitter, HostListener, Output} from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[outClick]'\r\n})\r\nexport class OutClickDirective {\r\n  constructor(private elRef: ElementRef) {}\r\n  @Output() outClickEvent: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  @HostListener('document:click', ['$event'])\r\n  toggleOpen(event: any) {\r\n    if (!this.elRef.nativeElement.contains(event.target)) {\r\n      this.outClickEvent.emit();\r\n    }\r\n  }\r\n}\r\n","import {Directive, ElementRef, OnInit} from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[autofocus]'\r\n})\r\nexport class AutofocusDirective implements OnInit {\r\n  constructor(private element: ElementRef) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.focusOnElement();\r\n  }\r\n\r\n  private focusOnElement(): void {\r\n    this.element.nativeElement.focus();\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {CommonModule} from '@angular/common';\n\nimport {EmojiPickerService} from './emoji-picker-lib.service';\nimport {EmojisSharedService} from './@core/services/emojis.shared';\nimport {EmojiPickerLibComponent} from './emoji-picker-lib.component';\nimport {OutClickDirective} from './@theme/directives/outclick.directive';\nimport {AutofocusDirective} from './@theme/directives/autofocus.directive';\n\n@NgModule({\n  declarations: [\n    OutClickDirective,\n    AutofocusDirective,\n    EmojiPickerLibComponent\n  ],\n  imports: [\n    FormsModule,\n    CommonModule,\n  ],\n  exports: [\n    EmojiPickerLibComponent\n  ],\n  providers: [EmojiPickerService, EmojisSharedService]\n})\nexport class EmojiPickerLibModule {\n}\n","export interface IData {\r\n  categories: ICategory[];\r\n  emojis: IEmoji[];\r\n}\r\n\r\nexport interface ICategory {\r\n  id: number;\r\n  name: string;\r\n  emoji: string;\r\n  selected?: boolean;\r\n  emojis?: IEmoji[];\r\n}\r\n\r\nexport interface IEmoji {\r\n  id: number;\r\n  name: string;\r\n  emoji: string;\r\n  keywords: string[];\r\n  categoryId: number;\r\n  isSupported?: boolean;\r\n}\r\n\r\nexport interface IEmojiPickerOptions {\r\n  btnIcon?: string;\r\n  searchIcon?: string;\r\n  customClass?: string;\r\n  emojisPerRow?: number;\r\n  emojiPickerPosition?: string;\r\n  showEmojiPicker?: boolean;\r\n  searchValue?: string;\r\n  defaultCatalogId?: number;\r\n}\r\n\r\nexport interface ISelectedCategory {\r\n  category: ICategory;\r\n  emojis: IEmoji[];\r\n}\r\n"],"names":[],"mappings":"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"}