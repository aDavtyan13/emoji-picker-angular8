{"version":3,"sources":["C:/Users/user/Desktop/emoji-picker-angular8/dist/emoji-picker-lib/fesm5/emoji-picker-lib.js","./src/app/app.component.html","./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkI;AACrF;AACE;AACR;;AAEvC;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,2BAA2B,sBAAsB,EAAE;AACnD;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,0BAA0B,oDAAe,aAAa,EAAE,OAAO;AAC/D;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,yBAAyB,gCAAgC,EAAE;AAC3D;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA;AACA,sDAAsD;AACtD,SAAS;AACT,MAAM;AACN;AACA,CAAC;AACD,WAAW,EAkBV;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,oCAAoC,0DAAY;AAChD,4CAA4C,EAAE,OAAO;AACrD;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,0BAA0B,gEAAgE,EAAE;AAC5F;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA,gCAAgC,qDAAqD,EAAE;AACvF,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,+UAA+U,8CAA8C,6DAA6D,6CAA6C,6BAA6B,qlBAAqlB,eAAe,8EAA8E,6FAA6F,8BAA8B,+CAA+C,sBAAsB,iBAAiB,0RAA0R,kDAAkD,gCAAgC,4TAA4T,iCAAiC,yEAAyE,oEAAoE,yOAAyO,yDAAyD,gCAAgC,aAAa,KAAK,cAAc;AAC/jF,iBAAiB;AACjB;AACA;AACA,0DAA0D;AAC1D,SAAS;AACT,MAAM;AACN;AACA,8BAA8B,OAAO,mDAAK,EAAE;AAC5C,4BAA4B,OAAO,oDAAM,EAAE;AAC3C;AACA;AACA,CAAC;AACD,WAAW,EAcV;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,iCAAiC,0DAAY;AAC7C;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,iBAAiB;AACjB;AACA;AACA,oDAAoD;AACpD,SAAS,OAAO,wDAAU;AAC1B,MAAM;AACN;AACA,yBAAyB,OAAO,oDAAM,EAAE;AACxC,sBAAsB,OAAO,0DAAY,yCAAyC;AAClF;AACA;AACA,CAAC;AACD,WAAW,EAQV;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,iBAAiB;AACjB;AACA;AACA,qDAAqD;AACrD,SAAS,OAAO,wDAAU;AAC1B,MAAM;AACN;AACA,CAAC;AACD,WAAW,EAMV;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,0DAAW;AACnC,wBAAwB,4DAAY;AACpC;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,kBAAkB;AAClB,WAAW,EAKV;AACD;AACA;AACA;AACA,sBAAsB;AACtB,WAAW,EAWV;AACD;AACA;AACA;AACA,mBAAmB;AACnB,WAAW,EAaV;AACD;AACA;AACA;AACA,gCAAgC;AAChC,WAAW,EAiBV;AACD;AACA;AACA;AACA,8BAA8B;AAC9B,WAAW,EAKV;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;;AAEA;AACA;AACA,cAAc,wGAAwG;AACtH;;AAE2J;AAC3J;;;;;;;;;;;;AC7gBA,wP;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;;;;;;ACZgD;AAQhD;IAIE;QAHO,eAAU,GAAW,EAAE,CAAC;IAI/B,CAAC;IAED,+BAAQ,GAAR;QACE,IAAI,CAAC,4BAA4B,EAAE,CAAC;IACtC,CAAC;IAEO,mDAA4B,GAApC;QACE,IAAI,CAAC,kBAAkB,GAAG;YACxB,WAAW,EAAE,aAAa;YAC1B,YAAY,EAAE,EAAE;YAChB,mBAAmB,EAAE,MAAM;YAC3B,gBAAgB,EAAE,CAAC;SACpB,CAAC;IACJ,CAAC;IAEM,kCAAW,GAAlB,UAAmB,KAAa;QAC9B,IAAI,CAAC,UAAU,IAAI,KAAK,CAAC;IAC3B,CAAC;IAtBU,YAAY;QAJxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,2IAAmC;SACpC,CAAC;OACW,YAAY,CAuBxB;IAAD,mBAAC;CAAA;AAvBwB;;;;;;;;;;;;;;;;;;;;;;ACRc;AACI;AACa;AAEX;AACc;AAc3D;IAAA;IACA,CAAC;IADY,SAAS;QAZrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;aACb;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,0DAAW;gBACX,0EAAoB;aACrB;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CACrB;IAAD,gBAAC;CAAA;AADqB;;;;;;;;;;;;;ACnBtB;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main-es5.js","sourcesContent":["import { Injectable, EventEmitter, Component, Input, Output, Directive, ElementRef, HostListener, NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { BehaviorSubject } from 'rxjs';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar EmojiPickerService = /** @class */ (function () {\r\n    function EmojiPickerService() {\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    EmojiPickerService.prototype.getEmojis = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return fetch('./assets/data/emojis.json').then((/**\r\n         * @param {?} result\r\n         * @return {?}\r\n         */\r\n        function (result) { return result.json(); }));\r\n    };\r\n    EmojiPickerService.decorators = [\r\n        { type: Injectable }\r\n    ];\r\n    return EmojiPickerService;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar EmojisSharedService = /** @class */ (function () {\r\n    function EmojisSharedService(emojiPickerService) {\r\n        this.emojiPickerService = emojiPickerService;\r\n        this.emojis = new BehaviorSubject((/** @type {?} */ ({})));\r\n        this.data = this.emojis.asObservable();\r\n        this.getEmojis();\r\n    }\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    EmojisSharedService.prototype.getEmojis = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        this.emojiPickerService.getEmojis().then((/**\r\n         * @param {?} data\r\n         * @return {?}\r\n         */\r\n        function (data) { return _this.emojis.next(data); }));\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} item\r\n     * @return {?}\r\n     */\r\n    EmojisSharedService.prototype.isEmoji = /**\r\n     * @private\r\n     * @param {?} item\r\n     * @return {?}\r\n     */\r\n    function (item) {\r\n        this.ctx.clearRect(0, 0, 4, 4);\r\n        this.ctx.fillText(item, -4, 4);\r\n        return this.ctx.getImageData(0, 0, 1, 1).data[1] > 0;\r\n    };\r\n    /**\r\n     * @param {?} data\r\n     * @return {?}\r\n     */\r\n    EmojisSharedService.prototype.checkEmojiSupport = /**\r\n     * @param {?} data\r\n     * @return {?}\r\n     */\r\n    function (data) {\r\n        var _this = this;\r\n        if (this.ctx || !data.emojis) {\r\n            return;\r\n        }\r\n        this.ctx = document.createElement('canvas').getContext('2d');\r\n        this.ctx.canvas.width = 1;\r\n        this.ctx.canvas.height = 1;\r\n        data.emojis.forEach((/**\r\n         * @param {?} element\r\n         * @return {?}\r\n         */\r\n        function (element) {\r\n            element.isSupported = _this.isEmoji(element.emoji);\r\n        }));\r\n    };\r\n    EmojisSharedService.decorators = [\r\n        { type: Injectable }\r\n    ];\r\n    /** @nocollapse */\r\n    EmojisSharedService.ctorParameters = function () { return [\r\n        { type: EmojiPickerService }\r\n    ]; };\r\n    return EmojisSharedService;\r\n}());\r\nif (false) {\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    EmojisSharedService.prototype.ctx;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    EmojisSharedService.prototype.emojis;\r\n    /** @type {?} */\r\n    EmojisSharedService.prototype.data;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    EmojisSharedService.prototype.emojiPickerService;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar EmojiPickerLibComponent = /** @class */ (function () {\r\n    function EmojiPickerLibComponent(emojisSharedService) {\r\n        this.emojisSharedService = emojisSharedService;\r\n        this.selectEmojiEvent = new EventEmitter();\r\n        this.selectedCategory = (/** @type {?} */ ({}));\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    EmojiPickerLibComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.initData();\r\n        this.getEmojis();\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    EmojiPickerLibComponent.prototype.initData = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.emojiPickerOptions = {\r\n            emojisPerRow: 9,\r\n            defaultCatalogId: 0\r\n        };\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    EmojiPickerLibComponent.prototype.getEmojis = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        this.emojisSharedService.data.subscribe((/**\r\n         * @param {?} data\r\n         * @return {?}\r\n         */\r\n        function (data) {\r\n            _this.data = data;\r\n        }));\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} element\r\n     * @return {?}\r\n     */\r\n    EmojiPickerLibComponent.prototype.includesSearchValue = /**\r\n     * @private\r\n     * @param {?} element\r\n     * @return {?}\r\n     */\r\n    function (element) {\r\n        return element.includes(this.emojiPickerOptions.searchValue.toLowerCase());\r\n    };\r\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    EmojiPickerLibComponent.prototype.showSelectedEmojis = /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    function (index) {\r\n        var _this = this;\r\n        this.selectedCategory.category = this.data.categories[index];\r\n        this.selectedCategory.emojis = this.data.emojis.filter((/**\r\n         * @param {?} emoji\r\n         * @return {?}\r\n         */\r\n        function (emoji) { return emoji.categoryId === _this.selectedCategory.category.id; }));\r\n    };\r\n    /**\r\n     * @param {?} count\r\n     * @return {?}\r\n     */\r\n    EmojiPickerLibComponent.prototype.calcEmojiSize = /**\r\n     * @param {?} count\r\n     * @return {?}\r\n     */\r\n    function (count) {\r\n        return 100 / count + \"%\";\r\n    };\r\n    /**\r\n     * @param {?} emoji\r\n     * @return {?}\r\n     */\r\n    EmojiPickerLibComponent.prototype.selectEmoji = /**\r\n     * @param {?} emoji\r\n     * @return {?}\r\n     */\r\n    function (emoji) {\r\n        this.selectEmojiEvent.emit(emoji);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    EmojiPickerLibComponent.prototype.toggleEmojiPicker = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        try {\r\n            this.emojisSharedService.checkEmojiSupport(this.data);\r\n            this.showSelectedEmojis(this.emojiPickerOptions.defaultCatalogId);\r\n            this.emojiPickerOptions.showEmojiPicker = !this.emojiPickerOptions.showEmojiPicker;\r\n        }\r\n        catch (error) {\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    EmojiPickerLibComponent.prototype.searchElement = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        if (this.emojiPickerOptions.searchValue) {\r\n            this.selectedCategory.emojis = this.data.emojis.filter((/**\r\n             * @param {?} emoji\r\n             * @return {?}\r\n             */\r\n            function (emoji) {\r\n                return emoji.keywords.some((/**\r\n                 * @param {?} key\r\n                 * @return {?}\r\n                 */\r\n                function (key) { return _this.includesSearchValue(key.toLowerCase()); })) || _this.includesSearchValue(emoji.name);\r\n            }));\r\n        }\r\n        else {\r\n            this.showSelectedEmojis(0);\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    EmojiPickerLibComponent.prototype.closeEmojiPicker = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.emojiPickerOptions.showEmojiPicker = false;\r\n        this.emojiPickerOptions.searchValue = '';\r\n    };\r\n    EmojiPickerLibComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'emoji-picker',\r\n                    template: \"<div class=\\\"emoji-picker\\\" outClick (outClickEvent)=\\\"closeEmojiPicker()\\\"\\r\\n     [ngClass]=\\\"emojiPickerOptions?.customClass ? emojiPickerOptions?.customClass : ''\\\">\\r\\n  <button type=\\\"button\\\" class=\\\"emoji-picker--icon--btn\\\"\\r\\n          (click)=\\\"toggleEmojiPicker()\\\"\\r\\n          [ngClass]=\\\"{'active': emojiPickerOptions?.showEmojiPicker}\\\">\\r\\n    <ng-container *ngIf=\\\"emojiPickerOptions?.btnIcon; else btnIconImg\\\">\\r\\n      <span class=\\\"{{emojiPickerOptions?.btnIcon}} emoji-picker--icon\\\"></span>\\r\\n    </ng-container>\\r\\n    <ng-template #btnIconImg>\\r\\n      <img src=\\\"assets/images/emoji.svg\\\" alt=\\\"\\\" class=\\\"emoji-picker--icon--img\\\">\\r\\n    </ng-template>\\r\\n  </button>\\r\\n  <div *ngIf=\\\"emojiPickerOptions?.showEmojiPicker\\\"\\r\\n       [ngClass]=\\\"emojiPickerOptions?.emojiPickerPosition ? 'emoji-picker--block--' + emojiPickerOptions.emojiPickerPosition : ''\\\"\\r\\n       class=\\\"emoji-picker--block\\\">\\r\\n    <div class=\\\"emoji-picker--categories\\\">\\r\\n      <div class=\\\"emoji-picker--category\\\"\\r\\n           *ngFor=\\\"let category of data?.categories; let i = index;\\\"\\r\\n           (click)=\\\"showSelectedEmojis(i)\\\"\\r\\n           [ngClass]=\\\"{'selected': selectedCategory?.category.id === category.id && !emojiPickerOptions.searchValue}\\\"\\r\\n           [ngStyle]=\\\"{'width': calcEmojiSize(data.categories.length)}\\\">\\r\\n        <div>{{category?.emoji}}</div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"emoji-picker--search\\\">\\r\\n      <input type=\\\"text\\\" placeholder=\\\"Search\\\" [(ngModel)]=\\\"emojiPickerOptions.searchValue\\\" (input)=\\\"searchElement()\\\" autofocus>\\r\\n      <ng-container *ngIf=\\\"emojiPickerOptions?.searchIcon; else searchIconImg\\\">\\r\\n        <span class=\\\"{{emojiPickerOptions?.searchIcon}} emoji-picker--icon\\\"></span>\\r\\n      </ng-container>\\r\\n      <ng-template #searchIconImg>\\r\\n        <img src=\\\"assets/images/search.svg\\\" class=\\\"emoji-picker--icon--img\\\" alt=\\\"\\\">\\r\\n      </ng-template>\\r\\n    </div>\\r\\n    <p *ngIf=\\\"!emojiPickerOptions.searchValue\\\" class=\\\"emoji-picker--category-name\\\">{{selectedCategory?.category.name}}</p>\\r\\n    <div class=\\\"emoji-picker--emojis\\\"\\r\\n         [ngClass]=\\\"{'emoji-picker--emojis--full-height': emojiPickerOptions.searchValue}\\\">\\r\\n      <ng-container *ngFor=\\\"let emoji of selectedCategory?.emojis\\\">\\r\\n        <div *ngIf=\\\"emoji.isSupported\\\" class=\\\"emoji-picker--emoji\\\"\\r\\n             (click)=\\\"selectEmoji(emoji.emoji)\\\"\\r\\n             [ngStyle]=\\\"{'width': calcEmojiSize(emojiPickerOptions?.emojisPerRow)}\\\">\\r\\n          <div title=\\\"{{emoji?.name}}\\\">{{emoji?.emoji}}</div>\\r\\n        </div>\\r\\n      </ng-container>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"\r\n                }] }\r\n    ];\r\n    /** @nocollapse */\r\n    EmojiPickerLibComponent.ctorParameters = function () { return [\r\n        { type: EmojisSharedService }\r\n    ]; };\r\n    EmojiPickerLibComponent.propDecorators = {\r\n        emojiPickerOptions: [{ type: Input }],\r\n        selectEmojiEvent: [{ type: Output }]\r\n    };\r\n    return EmojiPickerLibComponent;\r\n}());\r\nif (false) {\r\n    /** @type {?} */\r\n    EmojiPickerLibComponent.prototype.emojiPickerOptions;\r\n    /** @type {?} */\r\n    EmojiPickerLibComponent.prototype.selectEmojiEvent;\r\n    /** @type {?} */\r\n    EmojiPickerLibComponent.prototype.data;\r\n    /** @type {?} */\r\n    EmojiPickerLibComponent.prototype.selectedCategory;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    EmojiPickerLibComponent.prototype.emojisSharedService;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar OutClickDirective = /** @class */ (function () {\r\n    function OutClickDirective(elRef) {\r\n        this.elRef = elRef;\r\n        this.outClickEvent = new EventEmitter();\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    OutClickDirective.prototype.toggleOpen = /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    function (event) {\r\n        if (!this.elRef.nativeElement.contains(event.target)) {\r\n            this.outClickEvent.emit();\r\n        }\r\n    };\r\n    OutClickDirective.decorators = [\r\n        { type: Directive, args: [{\r\n                    selector: '[outClick]'\r\n                },] }\r\n    ];\r\n    /** @nocollapse */\r\n    OutClickDirective.ctorParameters = function () { return [\r\n        { type: ElementRef }\r\n    ]; };\r\n    OutClickDirective.propDecorators = {\r\n        outClickEvent: [{ type: Output }],\r\n        toggleOpen: [{ type: HostListener, args: ['document:click', ['$event'],] }]\r\n    };\r\n    return OutClickDirective;\r\n}());\r\nif (false) {\r\n    /** @type {?} */\r\n    OutClickDirective.prototype.outClickEvent;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    OutClickDirective.prototype.elRef;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar AutofocusDirective = /** @class */ (function () {\r\n    function AutofocusDirective(element) {\r\n        this.element = element;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    AutofocusDirective.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.focusOnElement();\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    AutofocusDirective.prototype.focusOnElement = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.element.nativeElement.focus();\r\n    };\r\n    AutofocusDirective.decorators = [\r\n        { type: Directive, args: [{\r\n                    selector: '[autofocus]'\r\n                },] }\r\n    ];\r\n    /** @nocollapse */\r\n    AutofocusDirective.ctorParameters = function () { return [\r\n        { type: ElementRef }\r\n    ]; };\r\n    return AutofocusDirective;\r\n}());\r\nif (false) {\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    AutofocusDirective.prototype.element;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar EmojiPickerLibModule = /** @class */ (function () {\r\n    function EmojiPickerLibModule() {\r\n    }\r\n    EmojiPickerLibModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    declarations: [\r\n                        OutClickDirective,\r\n                        AutofocusDirective,\r\n                        EmojiPickerLibComponent\r\n                    ],\r\n                    imports: [\r\n                        FormsModule,\r\n                        CommonModule,\r\n                    ],\r\n                    exports: [\r\n                        EmojiPickerLibComponent\r\n                    ],\r\n                    providers: [EmojiPickerService, EmojisSharedService]\r\n                },] }\r\n    ];\r\n    return EmojiPickerLibModule;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @record\r\n */\r\nfunction IData() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    IData.prototype.categories;\r\n    /** @type {?} */\r\n    IData.prototype.emojis;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction ICategory() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    ICategory.prototype.id;\r\n    /** @type {?} */\r\n    ICategory.prototype.name;\r\n    /** @type {?} */\r\n    ICategory.prototype.emoji;\r\n    /** @type {?|undefined} */\r\n    ICategory.prototype.selected;\r\n    /** @type {?|undefined} */\r\n    ICategory.prototype.emojis;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IEmoji() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    IEmoji.prototype.id;\r\n    /** @type {?} */\r\n    IEmoji.prototype.name;\r\n    /** @type {?} */\r\n    IEmoji.prototype.emoji;\r\n    /** @type {?} */\r\n    IEmoji.prototype.keywords;\r\n    /** @type {?} */\r\n    IEmoji.prototype.categoryId;\r\n    /** @type {?|undefined} */\r\n    IEmoji.prototype.isSupported;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IEmojiPickerOptions() { }\r\nif (false) {\r\n    /** @type {?|undefined} */\r\n    IEmojiPickerOptions.prototype.btnIcon;\r\n    /** @type {?|undefined} */\r\n    IEmojiPickerOptions.prototype.searchIcon;\r\n    /** @type {?|undefined} */\r\n    IEmojiPickerOptions.prototype.customClass;\r\n    /** @type {?|undefined} */\r\n    IEmojiPickerOptions.prototype.emojisPerRow;\r\n    /** @type {?|undefined} */\r\n    IEmojiPickerOptions.prototype.emojiPickerPosition;\r\n    /** @type {?|undefined} */\r\n    IEmojiPickerOptions.prototype.showEmojiPicker;\r\n    /** @type {?|undefined} */\r\n    IEmojiPickerOptions.prototype.searchValue;\r\n    /** @type {?|undefined} */\r\n    IEmojiPickerOptions.prototype.defaultCatalogId;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction ISelectedCategory() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    ISelectedCategory.prototype.category;\r\n    /** @type {?} */\r\n    ISelectedCategory.prototype.emojis;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\nexport { EmojiPickerLibComponent, EmojiPickerLibModule, EmojiPickerService, OutClickDirective as ɵa, AutofocusDirective as ɵb, EmojisSharedService as ɵc };\n//# sourceMappingURL=emoji-picker-lib.js.map\n","module.exports = \"<div class=\\\"demo-container\\\">\\n  <input type=\\\"text\\\" [(ngModel)]=\\\"inputValue\\\">\\n  <emoji-picker [emojiPickerOptions]=\\\"emojiPickerOptions\\\"\\n                (selectEmojiEvent)=\\\"selectEmoji($event)\\\"></emoji-picker>\\n</div>\\n\"","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {Component, OnInit} from '@angular/core';\n\nimport {IEmojiPickerOptions} from 'dist/emoji-picker-lib/lib/@core/interfaces/data.interface';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent implements OnInit {\n  public inputValue: string = '';\n  public emojiPickerOptions: IEmojiPickerOptions;\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n    this.initializeEmojiPickerOptions();\n  }\n\n  private initializeEmojiPickerOptions(): void {\n    this.emojiPickerOptions = {\n      customClass: 'customClass',\n      emojisPerRow: 13,\n      emojiPickerPosition: 'left',\n      defaultCatalogId: 1\n    };\n  }\n\n  public selectEmoji(emoji: string): void {\n    this.inputValue += emoji;\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {BrowserModule} from '@angular/platform-browser';\n\nimport {AppComponent} from './app.component';\nimport {EmojiPickerLibModule} from 'dist/emoji-picker-lib';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    EmojiPickerLibModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}