{"version":3,"sources":["../emoji-picker-lib/src/lib/emoji-picker-lib.component.html","./src/app/app.component.html","../emoji-picker-lib/src/lib/@core/services/emojis.shared.ts","../emoji-picker-lib/src/lib/@theme/directives/autofocus.directive.ts","../emoji-picker-lib/src/lib/@theme/directives/outclick.directive.ts","../emoji-picker-lib/src/lib/emoji-picker-lib.component.ts","../emoji-picker-lib/src/lib/emoji-picker-lib.module.ts","../emoji-picker-lib/src/lib/emoji-picker-lib.service.ts","../emoji-picker-lib/src/public-api.ts","./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es5.js","sourcesContent":["module.exports = \"<div class=\\\"emoji-picker\\\" outClick (outClickEvent)=\\\"closeEmojiPicker()\\\"\\r\\n     [ngClass]=\\\"emojiPickerOptions?.customClass ? emojiPickerOptions?.customClass : ''\\\">\\r\\n  <button type=\\\"button\\\" class=\\\"emoji-picker--icon--btn\\\"\\r\\n          (click)=\\\"toggleEmojiPicker()\\\"\\r\\n          [ngClass]=\\\"{'active': emojiPickerOptions?.showEmojiPicker}\\\">\\r\\n    <ng-container *ngIf=\\\"emojiPickerOptions?.btnIcon; else btnIconImg\\\">\\r\\n      <span class=\\\"{{emojiPickerOptions?.btnIcon}} emoji-picker--icon\\\"></span>\\r\\n    </ng-container>\\r\\n    <ng-template #btnIconImg>\\r\\n      <img src=\\\"assets/images/emoji.svg\\\" alt=\\\"\\\" class=\\\"emoji-picker--icon--img\\\">\\r\\n    </ng-template>\\r\\n  </button>\\r\\n  <div *ngIf=\\\"emojiPickerOptions?.showEmojiPicker\\\"\\r\\n       [ngClass]=\\\"emojiPickerOptions?.emojiPickerPosition ? 'emoji-picker--block--' + emojiPickerOptions.emojiPickerPosition : ''\\\"\\r\\n       class=\\\"emoji-picker--block\\\">\\r\\n    <div class=\\\"emoji-picker--categories\\\">\\r\\n      <div class=\\\"emoji-picker--category\\\"\\r\\n           *ngFor=\\\"let category of data?.categories; let i = index;\\\"\\r\\n           (click)=\\\"showSelectedEmojis(i)\\\"\\r\\n           [ngClass]=\\\"{'selected': selectedCategory?.category.id === category.id && !emojiPickerOptions.searchValue}\\\"\\r\\n           [ngStyle]=\\\"{'width': calcEmojiSize(data.categories.length)}\\\">\\r\\n        <div>{{category?.emoji}}</div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"emoji-picker--search\\\">\\r\\n      <input type=\\\"text\\\" placeholder=\\\"Search\\\" [(ngModel)]=\\\"emojiPickerOptions.searchValue\\\" (input)=\\\"searchElement()\\\" autofocus>\\r\\n      <ng-container *ngIf=\\\"emojiPickerOptions?.searchIcon; else searchIconImg\\\">\\r\\n        <span class=\\\"{{emojiPickerOptions?.searchIcon}} emoji-picker--icon\\\"></span>\\r\\n      </ng-container>\\r\\n      <ng-template #searchIconImg>\\r\\n        <img src=\\\"assets/images/search.svg\\\" class=\\\"emoji-picker--icon--img\\\" alt=\\\"\\\">\\r\\n      </ng-template>\\r\\n    </div>\\r\\n    <p *ngIf=\\\"!emojiPickerOptions.searchValue\\\" class=\\\"emoji-picker--category-name\\\">{{selectedCategory?.category.name}}</p>\\r\\n    <div class=\\\"emoji-picker--emojis\\\"\\r\\n         [ngClass]=\\\"{'emoji-picker--emojis--full-height': emojiPickerOptions.searchValue}\\\">\\r\\n      <ng-container *ngFor=\\\"let emoji of selectedCategory?.emojis\\\">\\r\\n        <div *ngIf=\\\"emoji.isSupported\\\" class=\\\"emoji-picker--emoji\\\"\\r\\n             (click)=\\\"selectEmoji(emoji.emoji)\\\"\\r\\n             [ngStyle]=\\\"{'width': calcEmojiSize(emojiPickerOptions?.emojisPerRow)}\\\">\\r\\n          <div title=\\\"{{emoji?.name}}\\\">{{emoji?.emoji}}</div>\\r\\n        </div>\\r\\n      </ng-container>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"<div class=\\\"demo-container\\\">\\n  <input type=\\\"text\\\" [(ngModel)]=\\\"inputValue\\\">\\n  <emoji-picker (selectEmojiEvent)=\\\"selectEmoji($event)\\\"></emoji-picker>\\n</div>\\n\"","import {Injectable} from '@angular/core';\r\nimport {BehaviorSubject, Observable} from 'rxjs';\r\n\r\nimport {IData, IEmoji} from '../interfaces/data.interface';\r\nimport {EmojiPickerService} from '../../emoji-picker-lib.service';\r\n\r\n@Injectable()\r\nexport class EmojisSharedService {\r\n  private ctx: CanvasRenderingContext2D;\r\n  private emojis: BehaviorSubject<IData> = new BehaviorSubject<IData>({} as IData);\r\n\r\n  public data: Observable<IData> = this.emojis.asObservable();\r\n\r\n  constructor(private emojiPickerService: EmojiPickerService) {\r\n    this.getEmojis();\r\n  }\r\n\r\n  private getEmojis(): void {\r\n    this.emojiPickerService.getEmojis().then((data: IData) => this.emojis.next(data));\r\n  }\r\n\r\n  private isEmoji(item: string): boolean {\r\n    this.ctx.clearRect(0, 0, 4, 4);\r\n    this.ctx.fillText(item, -4, 4);\r\n    return this.ctx.getImageData(0, 0, 1, 1).data[1] > 0;\r\n  }\r\n\r\n  public checkEmojiSupport(data: IData): void {\r\n    if (this.ctx || !data.emojis) {\r\n      return;\r\n    }\r\n    this.ctx = document.createElement('canvas').getContext('2d');\r\n    this.ctx.canvas.width = 1;\r\n    this.ctx.canvas.height = 1;\r\n    data.emojis.forEach((element: IEmoji) => {\r\n      element.isSupported = this.isEmoji(element.emoji);\r\n    });\r\n  }\r\n}\r\n","import {Directive, ElementRef, OnInit} from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[autofocus]'\r\n})\r\nexport class AutofocusDirective implements OnInit {\r\n  constructor(private element: ElementRef) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.focusOnElement();\r\n  }\r\n\r\n  private focusOnElement(): void {\r\n    this.element.nativeElement.focus();\r\n  }\r\n}\r\n","import {Directive, ElementRef, EventEmitter, HostListener, Output} from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[outClick]'\r\n})\r\nexport class OutClickDirective {\r\n  constructor(private elRef: ElementRef) {}\r\n  @Output() outClickEvent: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  @HostListener('document:click', ['$event'])\r\n  toggleOpen(event: any) {\r\n    if (!this.elRef.nativeElement.contains(event.target)) {\r\n      this.outClickEvent.emit();\r\n    }\r\n  }\r\n}\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\n\nimport {EmojisSharedService} from './@core/services/emojis.shared';\nimport {IData, IEmoji, IEmojiPickerOptions, ISelectedCategory} from './@core/interfaces/data.interface';\n\n@Component({\n  selector: 'emoji-picker',\n  templateUrl: './emoji-picker-lib.component.html'\n})\nexport class EmojiPickerLibComponent implements OnInit {\n  constructor(private emojisSharedService: EmojisSharedService) {\n  }\n\n  @Input() emojiPickerOptions: IEmojiPickerOptions = {};\n\n  @Output() selectEmojiEvent: EventEmitter<string> = new EventEmitter<string>();\n\n  public data: IData;\n  public selectedCategory: ISelectedCategory = {} as ISelectedCategory;\n\n  ngOnInit(): void {\n    this.initData();\n    this.getEmojis();\n  }\n\n  private initData(): void {\n    this.emojiPickerOptions = {\n      emojisPerRow: 9,\n      defaultCatalogId: 0,\n      ...this.emojiPickerOptions\n    };\n  }\n\n  private getEmojis(): void {\n    this.emojisSharedService.data.subscribe(data => {\n      this.data = data;\n    });\n  }\n\n  private includesSearchValue(element: string): boolean {\n    return element.includes(this.emojiPickerOptions.searchValue.toLowerCase());\n  }\n\n  public showSelectedEmojis(index: number): void {\n    this.selectedCategory.category = this.data.categories[index];\n    this.selectedCategory.emojis = this.data.emojis.filter((emoji: IEmoji) => emoji.categoryId === this.selectedCategory.category.id);\n  }\n\n  public calcEmojiSize(count: number): string {\n    return `${100 / count}%`;\n  }\n\n  public selectEmoji(emoji: string): void {\n    this.selectEmojiEvent.emit(emoji);\n  }\n\n  public toggleEmojiPicker(): void {\n    try {\n      this.emojisSharedService.checkEmojiSupport(this.data);\n      this.showSelectedEmojis(this.emojiPickerOptions.defaultCatalogId);\n      this.emojiPickerOptions.showEmojiPicker = !this.emojiPickerOptions.showEmojiPicker;\n    } catch (error) {\n    }\n  }\n\n  public searchElement(): void {\n    if (this.emojiPickerOptions.searchValue) {\n      this.selectedCategory.emojis = this.data.emojis.filter((emoji: IEmoji) =>\n        emoji.keywords.some((key: string) => this.includesSearchValue(key.toLowerCase())) || this.includesSearchValue(emoji.name)\n      );\n    } else {\n      this.showSelectedEmojis(0);\n    }\n  }\n\n  public closeEmojiPicker(): void {\n    this.emojiPickerOptions.showEmojiPicker = false;\n    this.emojiPickerOptions.searchValue = '';\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {CommonModule} from '@angular/common';\n\nimport {EmojiPickerService} from './emoji-picker-lib.service';\nimport {EmojisSharedService} from './@core/services/emojis.shared';\nimport {EmojiPickerLibComponent} from './emoji-picker-lib.component';\nimport {OutClickDirective} from './@theme/directives/outclick.directive';\nimport {AutofocusDirective} from './@theme/directives/autofocus.directive';\n\n@NgModule({\n  declarations: [\n    OutClickDirective,\n    AutofocusDirective,\n    EmojiPickerLibComponent\n  ],\n  imports: [\n    FormsModule,\n    CommonModule,\n  ],\n  exports: [\n    EmojiPickerLibComponent\n  ],\n  providers: [EmojiPickerService, EmojisSharedService]\n})\nexport class EmojiPickerLibModule {\n}\n","import {Injectable} from '@angular/core';\n\nimport {IData} from './@core/interfaces/data.interface';\n\n@Injectable()\nexport class EmojiPickerService {\n  public getEmojis(): Promise<IData> {\n    return fetch('./assets/data/emojis.json').then(result => result.json());\n  }\n}\n","/*\n * Public API Surface of emoji-picker-lib\n */\n\nexport * from './lib/emoji-picker-lib.module';\nexport * from './lib/emoji-picker-lib.service';\nexport * from './lib/emoji-picker-lib.component';\n\nexport * from './lib/@core/interfaces/data.interface';\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {\n  public inputValue: string = '';\n\n  constructor() {\n  }\n\n  public selectEmoji(emoji: string): void {\n    this.inputValue += emoji;\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {BrowserModule} from '@angular/platform-browser';\n\nimport {AppComponent} from './app.component';\nimport {EmojiPickerLibModule} from '../../../emoji-picker-lib/src/public-api';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    EmojiPickerLibModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}